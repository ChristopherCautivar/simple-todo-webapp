<!DOCTYPE html>
<html>
    <head>
        <!-- CSS only -->
        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.1/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-+0n0xVW2eSR5OomGNYDnhzAbDsOXxcvSN1TPprVMTNDbiYZCxYbOOl7+AMvyTG2x" crossorigin="anonymous">
        <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
        <style>
            h1{
                text-align: center;
                border: 3px solid green;
            }
            .title{
                text-align: center;
            }
            .group{
                padding-right: 15px;
                padding-left: 15px;
                border: 2px solid black;
                border-radius: 25px;
            }
            .todo{
                border: 2px solid green;
                border-radius: 25px;
            }
            .child{
                margin-left: 10px;
            }
            .empty{
                border: none;
            }
            #grid{
                border: 2px solid red;
            }
        </style>
        <script>
            function makeEntityElement(entity, editFields){
                result = "";
                for(var property in entity){
                    // private properties should not be included in this for loop
                    // if editFields, also return the corresponding form or input type to allow the user to submit an ajax call
                    // to create/update the field. ex. textbox or datepicker
                }
                return result;
            }
            
            function makeElement(cssClass, id, content){
                // makes the desired element... well in the first place we already have objects
                // so this function should simply create a visual representation of such an object
                // therfore: cssClass is solely in charge of applying the correct css rules to the element
                // via a combination fo user defined styling and object-style-rule pairs.
                // id carries over from the database, adjusted for the first id called
                // content is built with a combination of makeElement calls and the content stored in database
                return `<div class="${cssClass}" id="${id}">${content}</div>`
            }
            function makeGroup(group){
                // not every todo will belong to a group
                // append group info
                // mock first group instantiated:
                // will have to offset display id by group in the future
                id = 1
                $("#grid").append(
                    makeElement("group", `group${id}`,
                        makeElement("row title", `title${id}`, `<span><h3>Group ${id}</h3></span>`) + 
                        makeElement("row", `parents${id}`, "") +
                        makeElement("row", `children${id}`, "")
                    )
                )
                // populate todos
                makeTodos();
            }
            function makeChild(){
                // if there is no child make an empty div
            }
            function makeTodos(todos){
                // append todo information into groups
                // first the parents
                groupId = 1
                todoId = [1,2,3]
                todoId.forEach(i => {
                    $(`#parents${groupId}`).append(
                        makeElement("todo col-sm", `todo${i}`,
                            `
                            ${i}. Todo Item
                            <ul>
                                <li>Description and other fields</li>
                            </ul>
                            `
                        )
                    )
                    // then the children
                    $(`#children${groupId}`).append(
                        makeElement("todo child col-sm", `todo${i}a`,
                            `
                            ${i}a. Todo Item
                            <ul>
                                <li>Description and other fields</li>
                            </ul>
                            `
                        )
                    )
                });
            }
            $(document).ready( function(){
                // for each group loaded into the array of groups
                makeGroup();
            });
        </script>
    </head>
    <body>
        <h1>Prototype:</h1>
        <div class="container-fluid" id="grid">
        </div>
    </body>
</html>