<!DOCTYPE html>
<html>
    <head>
        <style>
            h1{
                text-align: center;
                border: 3px solid green;
            }
            div{
                text-align: center;
                border: 1px solid green;
            }
        </style>
        <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.1/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-+0n0xVW2eSR5OomGNYDnhzAbDsOXxcvSN1TPprVMTNDbiYZCxYbOOl7+AMvyTG2x" crossorigin="anonymous">
        <script src="/static/js/script.js"></script>
        <script>
            // an example of the ajax call to make a new todo
            // $.ajax({
            //         method: "POST",
            //         url: "/api/todos/",
            //         dataType: "json",
            //         data: {},
            //         success: function(result,status){
            //             alert(result)
            //         }
            // })
            function makeEntityElement(entity, id, editFields){
                // only one of these should ever be on screen at a time
                // currently the problem is, I want this function to be able to accept a
                // new todo to build the todo maker interface, however we need the script from Todo.js, 
                // which cannot be found currently...
                result = "<div class='container-fluid'>"
                result += `<input type='hidden' id='id${id}' name='id${id}' value='${id}'>`;
                for(var property in entity){
                    // private properties are not included in this for loop
                    // if editFields, also return the corresponding form or input type to allow the user to submit an ajax call
                    // to create/update the field. ex. textarea or datepicker
                    if(editFields || entity[property] != 0 || entity[property] === false){
                        result += `${property}: `
                    }
                    if(editFields){
                        // if working on an existing element, put values
                        // otherwise a default todo will be passed, making their values effectively the desired defaults
                        // might need some span tags for better formatting
                        switch(property){
                            case "title":
                                result += `&nbsp<input type='text' id='title${id}' name='title${id}' value='${entity[property]}'>`
                                break;
                            case "description":
                                result += `&nbsp<textarea id='description${id}' name='description${id}'>${entity[property]}</textarea>`
                                break;
                            case "completed":
                                result += `&nbsp<input type='checkbox' id='completed${id}' name='completed${id}' value='isChecked' ${(Boolean(entity[property]) ? "checked=''" : "")}>`
                                break;
                            case "weight":
                                result += `&nbsp<input type='number' id='weight${id}' name='weight${id}' min='0' max='10' value='${entity[property]}'>`
                                break;
                            case "time_estimate":
                                result += `&nbspHours: <input type='number' id='time_estimate_hours${id}' name='time_estimate_hours${id}' min ='0' max='24' value=''>` + 
                                    `&nbspMinutes: <input type='number' id='time_estimate_minutes${id}' name='time_estimate_minutes${id}' min ='0' max='60' value=''>`
                                break;
                            case "due_date":
                                // datetime
                                var today = new Date()
                                result += `&nbsp<input type='date' id='due_date${id}' name='due_date${id}' min='${today.getFullYear()}-${
                                    String(today.getMonth()+1).padStart(2,"0")}-${String(today.getDate()).padStart(2,"0")}' value="2022-07-01">`
                                break;
                        }
                        result += "<br>"
                    } else {
                        // just put the value of the property
                        if(editFields || entity[property] != 0 || entity[property] === false){
                            result += `${entity[property]}`
                            result += "<br>"
                        }
                    }
                }
                if(editFields){
                    result += `<button id='submit' onclick='submitTodo()'>Submit</button><br>`
                }
                result += "</div>"
                return result;
            }
            function submitTodo(){
                $.ajax({
                    method: "POST",
                    url: "/api/todos/",
                    dataType: "json",
                    data: {id : -1,
                        dateCreated : "",
                        dateUpdated : "",
                        completed : false,
                        title : "testpost",
                        description : "",
                        tags : [],
                        weight : 0,
                        prerequisites : [],
                        time_estimate : "",
                        due_date : ""},
                    success: function(result,status){
                        alert(`ID of created entity: ${result}`)
                    }
                })
            }
            $(document).ready(function(){
                $.ajax({
                    method: "GET",
                    url: "/api/todos/getById/8",
                    dataType: "json",
                    success: function(result,status){
                        for(entity in result){
                            $("#test").append(makeEntityElement(result[entity], entity, true))
                        }
                    }
                })
            });
        </script>
    </head>
    <body>
        <h1>HELLO WORLD!</h1>
        <a href="/mockup">go to mockup</a>
        <br>
        <a href="/app">go to app</a>
        <div id="test">
        </div>
    </body>
</html>